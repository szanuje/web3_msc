import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { ethers } from "ethers";
import { useState } from "react";

const Home: NextPage = () => {
  const [walletConnected, setWalletConnected] = useState(false);
  const [walletAddress, setWalletAddress] = useState("");
  const [sendWarning, setSendWarning] = useState("");
  const [getBalanceWarning, setGetBalanceWarning] = useState("");

  const walletConnect = async () => {
    if (!window.ethereum)
      throw new Error("No crypto wallet found. Please install it.");

    await window.ethereum.send("eth_requestAccounts");
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const signer = provider.getSigner();
    const addr = await signer.getAddress();
    setWalletAddress(
      `Wallet connected: ${addr.slice(0, 5)}...${addr.slice(-5, -1)}`
    );
    setWalletConnected(true);
    console.log(addr);
  };

  const sendEther = () => {
    if (!walletConnected) {
      setSendWarning("Connect your wallet first");
      return;
    } else {
      setSendWarning("");
    }
  };

  const getBalance = () => {
    if (!walletConnected) {
      setGetBalanceWarning("Connect your wallet first");
      return;
    } else {
      setGetBalanceWarning("");
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Application</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="shortcut icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Smart Contract interactive app</h1>

        <p
          className={(styles.description, styles.lightningCard)}
          onClick={walletConnect}
        >
          {walletConnected ? (
            <a className={styles.address}>{walletAddress}</a>
          ) : (
            "Please connect your wallet"
          )}
        </p>

        <div className={styles.grid}>
          <div className={styles.card}>
            <h2>Send Ether</h2>
            <input className={styles.input}></input>
            <div className={styles.lightningCard} onClick={sendEther}>
              <p>Send Ether</p>
            </div>
            {sendWarning.length > 0 ? (
              <p className={styles.warning}>{sendWarning}</p>
            ) : null}
          </div>

          <div className={styles.card}>
            <h2>Get Ether Balance</h2>
            <input read-only="true" className={styles.input}></input>
            <div className={styles.lightningCard} onClick={getBalance}>
              <p>Get Balance</p>
            </div>
            {getBalanceWarning.length > 0 ? (
              <p className={styles.warning}>{getBalanceWarning}</p>
            ) : null}
          </div>
        </div>
      </main>

      {/* <footer className={styles.footer}>
                <a
                    href="https://github.com/szanuje"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Created by M.P
                </a>
            </footer> */}
    </div>
  );
};

export default Home;
